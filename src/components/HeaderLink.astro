---
import type { HTMLAttributes } from "astro/types";

type Props = HTMLAttributes<"a">;

const { href, class: className, ...props } = Astro.props;

// Use Astro's built-in currentLocale and pathname for proper i18n comparison
const currentPathname = Astro.url.pathname;
const hrefString = typeof href === "string" ? href : href?.toString() || "";

// Simple comparison - Astro's getRelativeLocaleUrl should generate the correct URLs
const isActive = hrefString === currentPathname;
---

<a href={href} class:list={[className, { active: isActive }]} {...props}>
  <slot />
</a>
<style>
  a {
    display: inline-block;
    text-decoration: none;
  }
  a.active {
    font-weight: bolder;
    text-decoration: underline;
  }
</style>
